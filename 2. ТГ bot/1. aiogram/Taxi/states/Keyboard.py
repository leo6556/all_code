from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ParseMode
from aiogram import types

'''*******************************PASSENGER****************************'''
markup = InlineKeyboardMarkup()

but1 = InlineKeyboardButton(text='—É–ª. –ñ—É–∫–æ–≤—Å–∫–æ–≥–æ', callback_data="—É–ª. –ñ—É–∫–æ–≤—Å–∫–æ–≥–æ", pay=True)
but2 = InlineKeyboardButton(text='—É–ª. –õ–∏–Ω–µ–π–Ω–∞—è', callback_data="—É–ª. –õ–∏–Ω–µ–π–Ω–∞—è")
but3 = InlineKeyboardButton(text='—É–ª. –Ø–≥–æ–¥–Ω–∞—è', callback_data="—É–ª. –Ø–≥–æ–¥–Ω–∞—è")
but4 = InlineKeyboardButton(text='—É–ª. –°–µ–º–µ–π–Ω–∞—è', callback_data="—É–ª. –°–µ–º–µ–π–Ω–∞—è")

markup.row(but1, but2).row(but3, but4)

async def pass_from(message : types.Message):
    await message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', reply_markup=markup)




markup2 = InlineKeyboardMarkup()

but1 = InlineKeyboardButton(text='09:00', callback_data="10:00")
but2 = InlineKeyboardButton(text='12:00', callback_data="12:00")
but3 = InlineKeyboardButton(text='15:00', callback_data="15:00")
but4 = InlineKeyboardButton(text='18:00', callback_data="18:00")

markup2.row(but1, but2).row(but3, but4)

async def pass_when(message : types.Message):
    await message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', reply_markup=markup2)




markup3 = InlineKeyboardMarkup()

but1 = InlineKeyboardButton(text='–í—Å–µ –≤–µ—Ä–Ω–æ üòÑ', callback_data="check_ok")
but2 = InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å ü•≤', callback_data="check_no")

markup3.row(but1, but2)

async def pass_offer(message : types.Message, data):
    text = [
        "*–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:*",
        f"*–û—Ç–∫—É–¥–∞:* {data['from']},",
        f"*–í—Ä–µ–º—è:* {data['when']}",
        f"*–ö—É–¥–∞:* {data['where']}"
    ]
    await message.answer(text='\n'.join(text), reply_markup=markup3, parse_mode=ParseMode.MARKDOWN)


'''*******************************DRIVER****************************'''

markup4 = InlineKeyboardMarkup()

but5 = InlineKeyboardButton(text='09:00', callback_data="10:00")
but6 = InlineKeyboardButton(text='12:00', callback_data="12:00")
but7 = InlineKeyboardButton(text='15:00', callback_data="15:00")
but8 = InlineKeyboardButton(text='18:00', callback_data="18:00")

markup4.row(but5, but6).row(but7, but8)

async def dri_when(message : types.Message):
    await message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', reply_markup=markup4)





markup5 = InlineKeyboardMarkup()

but9 = InlineKeyboardButton(text='–í—Å–µ –≤–µ—Ä–Ω–æ', callback_data="check_ok")
but10 = InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏–∏—Ç—å', callback_data="check_no")
markup5.row(but9, but10)

async def dri_end(message : types.Message, data):
    text = [
        "*–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏:*",
        f"*–í—Ä–µ–º—è:* {data['when']}",
        f"*–ú–∞—à–∏–Ω–∞:* {data['car']}",
        f"*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {data['number']}"
    ]
    await message.answer('\n'.join(text), reply_markup=markup5,
                            parse_mode=ParseMode.MARKDOWN)










